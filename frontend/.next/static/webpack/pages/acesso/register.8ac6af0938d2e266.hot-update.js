"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/acesso/register",{

/***/ "./pages/acesso/register/utilities.ts":
/*!********************************************!*\
  !*** ./pages/acesso/register/utilities.ts ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getClassName: function() { return /* binding */ getClassName; },\n/* harmony export */   useFormHandling: function() { return /* binding */ useFormHandling; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction getClassName(isEditing, isSubmitted, errors, id) {\n    const hasError = isSubmitted && errors[id];\n    const hasSuccess = isSubmitted && !errors[id];\n    return \"acess__box \".concat(isEditing ? \"\" : hasError ? \"has-error\" : hasSuccess ? \"has-success\" : \"\");\n}\nconst useFormHandling = ()=>{\n    const [formData, setFormData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        email: \"\",\n        name: \"\",\n        phone: \"\",\n        password: \"\",\n        role: \"usuario\"\n    });\n    const errorMappings = {\n        email: /\\bemail\\b/i,\n        name: /\\bnome\\b/i,\n        phone: /\\btelefone\\b/i,\n        password: /\\bsenha\\b/i\n    };\n    const [errors, setErrors] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n    const [isSubmitted, setIsSubmitted] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [isEditing, setIsEditing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const handleFormEdit = (event, field)=>{\n        setFormData({\n            ...formData,\n            [field]: event.target.value\n        });\n        setErrors({\n            ...errors,\n            [field]: \"\"\n        });\n        setIsEditing((prevEditing)=>[\n                ...prevEditing,\n                field\n            ]);\n    };\n    const handleFormSubmit = async (event)=>{\n        try {\n            event.preventDefault();\n            setIsSubmitted(true);\n            setIsEditing([]);\n            const response = await fetch(\"http://localhost:4000/usuario\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(formData)\n            });\n            if (response.status === 400) {\n                const json = await response.json();\n                console.log(response.status);\n                console.log(json);\n                const { message } = json;\n                const fieldErrors = {};\n                if (Array.isArray(message)) {\n                    message.forEach((msg)=>{\n                        Object.keys(errorMappings).forEach((key)=>{\n                            if (errorMappings[key].test(msg)) {\n                                fieldErrors[key] = msg;\n                            }\n                        });\n                    });\n                }\n                setErrors(fieldErrors);\n                return;\n            }\n            const json = await response.json();\n            console.log(response.status);\n            console.log(json);\n        } catch (error) {\n            console.error(\"Erro ao registrar usu\\xe1rio: \", error);\n        }\n    };\n    return {\n        formData,\n        errors,\n        isSubmitted,\n        isEditing,\n        handleFormEdit,\n        handleFormSubmit\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9hY2Vzc28vcmVnaXN0ZXIvdXRpbGl0aWVzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBaUM7QUFHMUIsU0FBU0MsYUFBYUMsU0FBd0IsRUFBRUMsV0FBb0IsRUFBRUMsTUFBa0IsRUFBRUMsRUFBVTtJQUN6RyxNQUFNQyxXQUFXSCxlQUFlQyxNQUFNLENBQUNDLEdBQUc7SUFDMUMsTUFBTUUsYUFBYUosZUFBZSxDQUFDQyxNQUFNLENBQUNDLEdBQUc7SUFFN0MsT0FBTyxjQUF3RixPQUExRUgsWUFBWSxLQUFLSSxXQUFXLGNBQWNDLGFBQWEsZ0JBQWdCO0FBQzlGO0FBRU8sTUFBTUMsa0JBQWtCO0lBQzdCLE1BQU0sQ0FBQ0MsVUFBVUMsWUFBWSxHQUFHViwrQ0FBUUEsQ0FBQztRQUN2Q1csT0FBTztRQUNQQyxNQUFNO1FBQ05DLE9BQU87UUFDUEMsVUFBVTtRQUNWQyxNQUFNO0lBQ1I7SUFFQSxNQUFNQyxnQkFBMkM7UUFDL0NMLE9BQU87UUFDUEMsTUFBTTtRQUNOQyxPQUFPO1FBQ1BDLFVBQVU7SUFDWjtJQUVBLE1BQU0sQ0FBQ1YsUUFBUWEsVUFBVSxHQUFHakIsK0NBQVFBLENBQWEsQ0FBQztJQUNsRCxNQUFNLENBQUNHLGFBQWFlLGVBQWUsR0FBR2xCLCtDQUFRQSxDQUFDO0lBQy9DLE1BQU0sQ0FBQ0UsV0FBV2lCLGFBQWEsR0FBR25CLCtDQUFRQSxDQUFXLEVBQUU7SUFFdkQsTUFBTW9CLGlCQUFpQixDQUFDQyxPQUE0Q0M7UUFDbEVaLFlBQVk7WUFBRSxHQUFHRCxRQUFRO1lBQUUsQ0FBQ2EsTUFBTSxFQUFFRCxNQUFNRSxNQUFNLENBQUNDLEtBQUs7UUFBQztRQUN2RFAsVUFBVTtZQUFFLEdBQUdiLE1BQU07WUFBRSxDQUFDa0IsTUFBTSxFQUFFO1FBQUc7UUFDbkNILGFBQWFNLENBQUFBLGNBQWU7bUJBQUlBO2dCQUFhSDthQUFNO0lBQ3JEO0lBRUEsTUFBTUksbUJBQW1CLE9BQU9MO1FBQzlCLElBQUk7WUFDRkEsTUFBTU0sY0FBYztZQUNwQlQsZUFBZTtZQUNmQyxhQUFhLEVBQUU7WUFFZixNQUFNUyxXQUFXLE1BQU1DLE1BQU0saUNBQWlDO2dCQUM1REMsUUFBUTtnQkFDUkMsU0FBUztvQkFDUCxnQkFBZ0I7Z0JBQ2xCO2dCQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUN6QjtZQUN2QjtZQUVBLElBQUltQixTQUFTTyxNQUFNLEtBQUssS0FBSztnQkFDM0IsTUFBTUMsT0FBTyxNQUFNUixTQUFTUSxJQUFJO2dCQUNoQ0MsUUFBUUMsR0FBRyxDQUFDVixTQUFTTyxNQUFNO2dCQUMzQkUsUUFBUUMsR0FBRyxDQUFDRjtnQkFDWixNQUFNLEVBQUVHLE9BQU8sRUFBRSxHQUFHSDtnQkFDcEIsTUFBTUksY0FBMEIsQ0FBQztnQkFFakMsSUFBSUMsTUFBTUMsT0FBTyxDQUFDSCxVQUFVO29CQUMxQkEsUUFBUUksT0FBTyxDQUFDQyxDQUFBQTt3QkFDZEMsT0FBT0MsSUFBSSxDQUFDOUIsZUFBZTJCLE9BQU8sQ0FBQ0ksQ0FBQUE7NEJBQ2pDLElBQUkvQixhQUFhLENBQUMrQixJQUFJLENBQUNDLElBQUksQ0FBQ0osTUFBTTtnQ0FDaENKLFdBQVcsQ0FBQ08sSUFBSSxHQUFHSDs0QkFDckI7d0JBQ0Y7b0JBQ0Y7Z0JBQ0Y7Z0JBRUEzQixVQUFVdUI7Z0JBQ1Y7WUFDRjtZQUVBLE1BQU1KLE9BQU8sTUFBTVIsU0FBU1EsSUFBSTtZQUNoQ0MsUUFBUUMsR0FBRyxDQUFDVixTQUFTTyxNQUFNO1lBQzNCRSxRQUFRQyxHQUFHLENBQUNGO1FBQ2QsRUFBRSxPQUFPYSxPQUFPO1lBQ2RaLFFBQVFZLEtBQUssQ0FBQyxrQ0FBK0JBO1FBQy9DO0lBQ0Y7SUFFQSxPQUFPO1FBQ0x4QztRQUNBTDtRQUNBRDtRQUNBRDtRQUNBa0I7UUFDQU07SUFDRjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvYWNlc3NvL3JlZ2lzdGVyL3V0aWxpdGllcy50cz80ZmRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBGb3JtRXJyb3JzIH0gZnJvbSAnLi90eXBlcyc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2xhc3NOYW1lKGlzRWRpdGluZzogc3RyaW5nIHwgbnVsbCwgaXNTdWJtaXR0ZWQ6IGJvb2xlYW4sIGVycm9yczogRm9ybUVycm9ycywgaWQ6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgY29uc3QgaGFzRXJyb3IgPSBpc1N1Ym1pdHRlZCAmJiBlcnJvcnNbaWRdO1xyXG4gIGNvbnN0IGhhc1N1Y2Nlc3MgPSBpc1N1Ym1pdHRlZCAmJiAhZXJyb3JzW2lkXTtcclxuXHJcbiAgcmV0dXJuIGBhY2Vzc19fYm94ICR7aXNFZGl0aW5nID8gJycgOiBoYXNFcnJvciA/ICdoYXMtZXJyb3InIDogaGFzU3VjY2VzcyA/ICdoYXMtc3VjY2VzcycgOiAnJ31gO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgdXNlRm9ybUhhbmRsaW5nID0gKCkgPT4ge1xyXG4gIGNvbnN0IFtmb3JtRGF0YSwgc2V0Rm9ybURhdGFdID0gdXNlU3RhdGUoe1xyXG4gICAgZW1haWw6ICcnLFxyXG4gICAgbmFtZTogJycsXHJcbiAgICBwaG9uZTogJycsXHJcbiAgICBwYXNzd29yZDogJycsXHJcbiAgICByb2xlOiAndXN1YXJpbydcclxuICB9KTtcclxuXHJcbiAgY29uc3QgZXJyb3JNYXBwaW5nczogeyBba2V5OiBzdHJpbmddOiBSZWdFeHAgfSA9IHtcclxuICAgIGVtYWlsOiAvXFxiZW1haWxcXGIvaSxcclxuICAgIG5hbWU6IC9cXGJub21lXFxiL2ksXHJcbiAgICBwaG9uZTogL1xcYnRlbGVmb25lXFxiL2ksXHJcbiAgICBwYXNzd29yZDogL1xcYnNlbmhhXFxiL2lcclxuICB9O1xyXG5cclxuICBjb25zdCBbZXJyb3JzLCBzZXRFcnJvcnNdID0gdXNlU3RhdGU8Rm9ybUVycm9ycz4oe30pO1xyXG4gIGNvbnN0IFtpc1N1Ym1pdHRlZCwgc2V0SXNTdWJtaXR0ZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFtpc0VkaXRpbmcsIHNldElzRWRpdGluZ10gPSB1c2VTdGF0ZTxzdHJpbmdbXT4oW10pO1xyXG5cclxuICBjb25zdCBoYW5kbGVGb3JtRWRpdCA9IChldmVudDogUmVhY3QuQ2hhbmdlRXZlbnQ8SFRNTElucHV0RWxlbWVudD4sIGZpZWxkOiBrZXlvZiB0eXBlb2YgZm9ybURhdGEpID0+IHtcclxuICAgIHNldEZvcm1EYXRhKHsgLi4uZm9ybURhdGEsIFtmaWVsZF06IGV2ZW50LnRhcmdldC52YWx1ZSB9KTtcclxuICAgIHNldEVycm9ycyh7IC4uLmVycm9ycywgW2ZpZWxkXTogJycgfSk7XHJcbiAgICBzZXRJc0VkaXRpbmcocHJldkVkaXRpbmcgPT4gWy4uLnByZXZFZGl0aW5nLCBmaWVsZF0pO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGhhbmRsZUZvcm1TdWJtaXQgPSBhc3luYyAoZXZlbnQ6IFJlYWN0LkZvcm1FdmVudDxIVE1MRm9ybUVsZW1lbnQ+KSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBzZXRJc1N1Ym1pdHRlZCh0cnVlKTtcclxuICAgICAgc2V0SXNFZGl0aW5nKFtdKTtcclxuXHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6NDAwMC91c3VhcmlvJywge1xyXG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShmb3JtRGF0YSlcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHtcclxuICAgICAgICBjb25zdCBqc29uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLnN0YXR1cyk7XHJcbiAgICAgICAgY29uc29sZS5sb2coanNvbik7XHJcbiAgICAgICAgY29uc3QgeyBtZXNzYWdlIH0gPSBqc29uO1xyXG4gICAgICAgIGNvbnN0IGZpZWxkRXJyb3JzOiBGb3JtRXJyb3JzID0ge307XHJcblxyXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KG1lc3NhZ2UpKSB7XHJcbiAgICAgICAgICBtZXNzYWdlLmZvckVhY2gobXNnID0+IHtcclxuICAgICAgICAgICAgT2JqZWN0LmtleXMoZXJyb3JNYXBwaW5ncykuZm9yRWFjaChrZXkgPT4ge1xyXG4gICAgICAgICAgICAgIGlmIChlcnJvck1hcHBpbmdzW2tleV0udGVzdChtc2cpKSB7XHJcbiAgICAgICAgICAgICAgICBmaWVsZEVycm9yc1trZXldID0gbXNnO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHNldEVycm9ycyhmaWVsZEVycm9ycyk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCBqc29uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5zdGF0dXMpO1xyXG4gICAgICBjb25zb2xlLmxvZyhqc29uKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gYW8gcmVnaXN0cmFyIHVzdcOhcmlvOiAnLCBlcnJvcik7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGZvcm1EYXRhLFxyXG4gICAgZXJyb3JzLFxyXG4gICAgaXNTdWJtaXR0ZWQsXHJcbiAgICBpc0VkaXRpbmcsXHJcbiAgICBoYW5kbGVGb3JtRWRpdCxcclxuICAgIGhhbmRsZUZvcm1TdWJtaXRcclxuICB9O1xyXG59O1xyXG5cclxuIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwiZ2V0Q2xhc3NOYW1lIiwiaXNFZGl0aW5nIiwiaXNTdWJtaXR0ZWQiLCJlcnJvcnMiLCJpZCIsImhhc0Vycm9yIiwiaGFzU3VjY2VzcyIsInVzZUZvcm1IYW5kbGluZyIsImZvcm1EYXRhIiwic2V0Rm9ybURhdGEiLCJlbWFpbCIsIm5hbWUiLCJwaG9uZSIsInBhc3N3b3JkIiwicm9sZSIsImVycm9yTWFwcGluZ3MiLCJzZXRFcnJvcnMiLCJzZXRJc1N1Ym1pdHRlZCIsInNldElzRWRpdGluZyIsImhhbmRsZUZvcm1FZGl0IiwiZXZlbnQiLCJmaWVsZCIsInRhcmdldCIsInZhbHVlIiwicHJldkVkaXRpbmciLCJoYW5kbGVGb3JtU3VibWl0IiwicHJldmVudERlZmF1bHQiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5Iiwic3RhdHVzIiwianNvbiIsImNvbnNvbGUiLCJsb2ciLCJtZXNzYWdlIiwiZmllbGRFcnJvcnMiLCJBcnJheSIsImlzQXJyYXkiLCJmb3JFYWNoIiwibXNnIiwiT2JqZWN0Iiwia2V5cyIsImtleSIsInRlc3QiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/acesso/register/utilities.ts\n"));

/***/ })

});